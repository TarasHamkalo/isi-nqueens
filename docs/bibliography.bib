@INPROCEEDINGS{Lifeguard,
    author={Dadgar, Armon and Phillips, James and Currey, Jon},
    booktitle={2018 48th Annual IEEE/IFIP International Conference on Dependable Systems and Networks Workshops (DSN-W)},
    title={Lifeguard: Local Health Awareness for More Accurate Failure Detection},
    year={2018},
    volume={},
    number={},
    pages={22-25},
    keywords={Detectors;Protocols;Peer-to-peer computing;Probes;Sensitivity;Delays;Robustness;Distributed computing;Distributed processing;Fault diagnosis;Fault detection;Fault tolerance},
    doi={10.1109/DSN-W.2018.00017}}

@online{NetflixEureka,
    author = {Netflix},
    title = {Netflix Eureka wiki},
    date = {2018-07-13},
    url = {https://github.com/Netflix/eureka/wiki},
    urldate = {2024-10-09}
}
@online{Serf,
    author = {Hashicorp},
    title = {Serf},
    date = {2024-09-17},
    url = {https://github.com/hashicorp/serf/blob/master/docs/internals/gossip.html.markdown#serf-specific-messages},
    urldate = {2024-11-02}
}

@online{Consul,
    author = {Hashicorp},
    title = {ConsulIo},
    year = {2024},
    url = {https://developer.hashicorp.com/consul/docs/architecture},
    urldate = {2024-10-09}
}

@online{SpringCloud,
    author = {Spring},
    title = {Spring Cloud},
    year = {2024},
    url = {https://spring.io/projects/spring-cloud},
    urldate = {2024-10-09}
}

@BOOK{SpringMicroservicesInAction,
    author = {Patel, Kalpit and Carnell, John},
    booktitle = {Spring Microservices in Action},
    year = {2017},
    volume = {},
    number = {},
    pages = {20, 96, 97},
    keywords = {},
    doi = {}
}

@BOOK{Gossip,
    author = {Jelasity, M{\'a}rk},
    editor = {Di Marzo Serugendo, Giovanna and Gleizes, Marie-Pierre and Karageorgos, Anthony},
    booktitle = {Self-organising Software: From Natural to Artificial Adaptation},
    year = {2011},
    publisher = {Springer Berlin Heidelberg},
    address = {Berlin, Heidelberg},
    pages = {139--162},
    doi = {10.1007/978-3-642-17348-6_7},
    url = {https://doi.org/10.1007/978-3-642-17348-6_7}
}

@INPROCEEDINGS{GossipComplexity,
    author = {Karp, R. and Schindelhauer, C. and Shenker, S. and Vocking, B.},
    booktitle = {Proceedings 41st Annual Symposium on Foundations of Computer Science},
    title = {Randomized rumor spreading},
    year = {2000},
    volume = {},
    number = {},
    pages = {565-574},
    keywords = {Robustness;Computer science;Distributed databases;Computer crashes},
    doi = {10.1109/SFCS.2000.892324} }

@INPROCEEDINGS{LoadBalancer,
    author={Rahman, Mazedur and Iqbal, Samira and Gao, Jerry},
    booktitle={2014 IEEE 8th International Symposium on Service Oriented System Engineering},
    title={Load Balancer as a Service in Cloud Computing},
    year={2014},
    volume={},
    number={},
    pages={204-211},
    keywords={Servers;Load management;Cloud computing;Time factors;Algorithm design and analysis;Load modeling;load balancer as a service;cloud computing;load balancing;network traffic manager},
    doi={10.1109/SOSE.2014.31}}

@article{APIGateway,
    doi = {10.1088/1742-6596/1087/3/032032},
    url = {https://dx.doi.org/10.1088/1742-6596/1087/3/032032},
    year = {2018},
    month = {sep},
    publisher = {IOP Publishing},
    volume = {1087},
    number = {3},
    pages = {032032},
    author = {J T Zhao and S Y Jing and L Z Jiang},
    title = {Management of API Gateway Based on Micro-service Architecture},
    journal = {Journal of Physics: Conference Series},
    abstract = {Micro-services are activities that run in your own programs and communicate with HTTP APIS through lightweight devices. Under the Micro-service architecture, the API gateway is an important component of the overall architecture. It abstracts the common functions that are needed in the Micro-services. As the only entry for a Micro-service, the API gateway encapsulates the specific internal implementation and interface of the system. Based on the analysis and comparison of the traditional framework and the Micro-service framework, this paper mainly analyzes the realization of the functions: load balancing, automatic service blowing, and Gray release, and gives the implement scheme of the key technology of the API gateway under the Micro-service architecture. The scheme discusses the case study of the technology selection and application architecture under micro service. And it also provides a new solution for the difficulties in manage API gateway under micro service by giving a detailed design for the authentication of the API gateway, reverse proxy function and flow control function. By using API gateway, the problem of how a caller can call an independent service can be solved, thus the development efficiency can be greatly improved.}
}

@BOOK{MicroserviceswithSpringBoot ,
    author={Larsson, Magnus},
    booktitle={Microservices with Spring Boot and Spring Cloud: Build resilient and scalable microservices using Spring Cloud, Istio, and Kubernetes},
    year={2021},
    volume={},
    number={},
    pages={},
    keywords={},
    doi={}}

@book{MicroservicePatterns,
    title={Microservices patterns: with examples in Java},
    author={Richardson, Chris},
    year={2018},
    publisher={Simon and Schuster}
}

%@BOOK{2, %о том что дают микросервиси
%author = {Huaylupo Sanchez, Illary and Carnell, John},
%booktitle = {Spring Microservices in Action, Second Edition},
%year = {2021},
%volume = {},
%number = {},
%pages = {18},
%keywords = {spring;microservices;cloud;getaway;boot;api;java;platform;applications},
%doi = {} }
